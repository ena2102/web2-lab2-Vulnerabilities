package web2.lab2.vulnerabilities.Controllers;

import org.owasp.html.PolicyFactory;
import org.owasp.html.Sanitizers;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class VulnerabilityController {

    private boolean xssVulnerabilityEnabled = false;
    private boolean bacVulnerabilityEnabled = false;
    private final PolicyFactory sanitizer = Sanitizers.FORMATTING.and(Sanitizers.LINKS);

    @GetMapping("/")
    public String homePage(Model model) {
        model.addAttribute("xssVulnerabilityEnabled", xssVulnerabilityEnabled);
        model.addAttribute("bacVulnerabilityEnabled", bacVulnerabilityEnabled);
        return "index";
    }

    @GetMapping("/xss-vulnerability")
    public String handleSearch(@RequestParam(value = "search", required = false) String search, Model model) {
        String searchResult = "";
        if (search != null) {
            searchResult = xssVulnerabilityEnabled ? search + "Uspješno ste izvršili XSS napad!" : (sanitizer.sanitize(search).isEmpty() ? "XSS napad je uspješno zaustavljen!!" : sanitizer.sanitize(search));
        }
        model.addAttribute("searchResult", searchResult);
        return "search";
    }


    @GetMapping("/toggle-xss")
    public String toggleXSSVulnerability() {
        xssVulnerabilityEnabled = !xssVulnerabilityEnabled;
        return "redirect:/";
    }

    @GetMapping("/userDataBacEnabled")
    public String userDataBacEnabled(Model model) {
        return "userData";
    }

    @GetMapping("/userData")
    public String userData(Model model) {
        return "userData";
    }

    @GetMapping("/toggle-bac")
    public String toggleBacVulnerability() {
        bacVulnerabilityEnabled = !bacVulnerabilityEnabled;
        return "redirect:/?tab=bac";
    }
}